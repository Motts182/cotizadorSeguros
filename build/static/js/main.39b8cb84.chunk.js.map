{"version":3,"sources":["components/Headear.js","components/Formulario.js","helper.js","components/Resumen.js","components/Resultado.js","components/Spiner.js","App.js","reportWebVitals.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","guardarResumen","guardarCargando","useState","marca","year","plan","datos","guardarDatos","error","guardarError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","TextoCotizacion","ResultadoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spiner","Contenedor","ContenedorFormulario","App","resumen","cargando","Headear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b8cb84.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled'\r\n\r\nconst ContenedorHeader = styled.header`\r\n    background-color: #26C6DA;\r\n    padding: 10px;\r\n    font-weight: bold;\r\n    color: #FFFFFF;\r\n`;\r\n\r\nconst TextoHeader = styled.h1`\r\n    font-size: 2rem;\r\n    margin: 0;\r\n    font-family: 'Slabo 27px', serif;\r\n    text-align: center;\r\n`\r\n\r\nconst Header = ({titulo}) => {\r\n    return (\r\n        <ContenedorHeader>\r\n            <TextoHeader>{titulo}</TextoHeader>\r\n        </ContenedorHeader>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from '../helper';\r\n\r\nconst Campo = styled.div`\r\n    display: flex;\r\n    margin-bottom: 1rem;\r\n    align-items: center;\r\n`;\r\n\r\nconst Label = styled.label`\r\n    flex: 0 0 100px;\r\n`;\r\n\r\nconst Select = styled.select`\r\n    display: block;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    border: 1px solid #e1e1e1;\r\n    --webkit-appearance: none;\r\n`;\r\n\r\nconst InputRadio = styled.input`\r\n  margin: 0 1rem;\r\n`;\r\n\r\nconst Boton = styled.button`\r\n    background-color: #00838F;\r\n    font-size: 16px;\r\n    width: 100%;\r\n    padding: 1rem;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    font-weight: blod;\r\n    border: none;\r\n    transition: background-color .3s ease;\r\n    margin-top: 2rem;\r\n\r\n    &:hover{\r\n        background-color: #666;\r\n        cursor: pointer;\r\n        padding: 1rem;\r\n        width: 100%;\r\n        text-align: center;\r\n        margin-bottom: 2rem;\r\n    }\r\n`;\r\n\r\nconst Error = styled.div`\r\n    background-color: red;\r\n    color: white;\r\n    padding: 1rem;\r\n    width:100%;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n`;\r\n\r\nconst Formulario = ({ guardarResumen, guardarCargando }) => {\r\n\r\n    const [datos, guardarDatos] = useState({\r\n        marca: '',\r\n        year: '',\r\n        plan: ''\r\n    });\r\n\r\n    const [error, guardarError] = useState(false);\r\n\r\n    const { marca, year, plan } = datos;\r\n\r\n    const obtenerInformacion = e => {\r\n        guardarDatos({\r\n            ...datos,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const cotizarSeguro = e => {\r\n        e.preventDefault();\r\n\r\n        if (marca.trim() === '' || year.trim() === '' || plan.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        guardarError(false);\r\n\r\n        let resultado = 2000;\r\n\r\n        //obtener la diferencia de años\r\n        const diferencia = obtenerDiferenciaYear(year);\r\n\r\n        resultado -= ((diferencia * 3) * resultado) / 100;\r\n\r\n        resultado = calcularMarca(marca) * resultado;\r\n\r\n        const incrementoPlan = obtenerPlan(plan);\r\n\r\n        resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\r\n\r\n        guardarCargando(true);\r\n\r\n        setTimeout(() => {\r\n\r\n            guardarCargando(false);\r\n\r\n            guardarResumen({\r\n                cotizacion: resultado,\r\n                datos\r\n            });\r\n\r\n        }, 3000);\r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={cotizarSeguro}\r\n        >\r\n            {error ? <Error>Todos los campos son obligatorios</Error> : \"\"}\r\n            <Campo>\r\n                <Label>Marca</Label>\r\n                <Select\r\n                    name=\"marca\"\r\n                    value={marca}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">--Seleccione--</option>\r\n                    <option value=\"americano\">--Americano--</option>\r\n                    <option value=\"europeo\">--Europeo--</option>\r\n                    <option value=\"asiatico\">--Asiatico--</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Año</Label>\r\n                <Select\r\n                    name=\"year\"\r\n                    value={year}\r\n                    onChange={obtenerInformacion}\r\n                >\r\n                    <option value=\"\">-- Seleccione --</option>\r\n                    <option value=\"2021\">2021</option>\r\n                    <option value=\"2020\">2020</option>\r\n                    <option value=\"2019\">2019</option>\r\n                    <option value=\"2018\">2018</option>\r\n                    <option value=\"2017\">2017</option>\r\n                    <option value=\"2016\">2016</option>\r\n                    <option value=\"2015\">2015</option>\r\n                    <option value=\"2014\">2014</option>\r\n                    <option value=\"2013\">2013</option>\r\n                    <option value=\"2012\">2012</option>\r\n                </Select>\r\n            </Campo>\r\n            <Campo>\r\n                <Label>Plan</Label>\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"basico\"\r\n                    checked={plan === \"basico\"}\r\n                    onChange={obtenerInformacion}\r\n                />Basico\r\n                <InputRadio\r\n                    type=\"radio\"\r\n                    name=\"plan\"\r\n                    value=\"completo\"\r\n                    checked={plan === \"completo\"}\r\n                    onChange={obtenerInformacion}\r\n                />Completo\r\n            </Campo>\r\n            <Boton type=\"submit\">Cotizar</Boton>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Formulario;","\r\nexport function obtenerDiferenciaYear(year) {\r\n    return new Date().getFullYear() - year;\r\n}\r\n\r\nexport function calcularMarca(marca) {\r\n    let incremento;\r\n\r\n    switch (marca) {\r\n\r\n        case 'europeo':\r\n            incremento = 1.30;\r\n            break;\r\n\r\n        case 'americano':\r\n            incremento = 1.15;\r\n            break;\r\n\r\n        case 'asiatico':\r\n            incremento = 1.05;\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return incremento;\r\n}\r\n\r\nexport function obtenerPlan(plan) {\r\n    return (plan === 'basico') ? 1.20 : 1.50;\r\n}\r\n\r\nexport function primerMayuscula(text) {\r\n    return text(0).toUpper() + text.slice(1);\r\n}","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { primerMayuscula } from '../helper';\r\n\r\n\r\nconst ContenedorResumen = styled.div`\r\n    padding: 1rem;\r\n    text-align: center;\r\n    background-color: #00838F;\r\n    color: #FFF;\r\n    margin-top: 1rem;\r\n`;\r\n\r\n\r\nconst Resumen = ({ datos }) => {\r\n    const { marca, year, plan } = datos;\r\n\r\n    if (marca === '' || year === '' || plan === '') return null;\r\n\r\n    return (\r\n        <ContenedorResumen>\r\n            <h2>Resumen de Cotizacion</h2>\r\n            <ul>\r\n                <li>Marca: {marca} </li>\r\n                <li>Plan: {plan} </li>\r\n                <li>Año del auto: {year} </li>\r\n            </ul>\r\n        </ContenedorResumen>\r\n    );\r\n}\r\n\r\nexport default Resumen;","import React from 'react';\r\nimport styled from '@emotion/styled'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst Mensaje = styled.p`\r\n    background-color: rgb(127, 224, 237);\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    text-align: center;\r\n`;\r\n\r\nconst TextoCotizacion = styled.p`\r\n    color: #00838F;\r\n    padding: 1rem;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    margin: 0;\r\n`;\r\n\r\nconst ResultadoCotizacion = styled.div`\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border: 1px solid #26C6DA;\r\n    background-color: rgb(127,224,237);\r\n    margin-top: 1rem;\r\n    position: relative;\r\n`;\r\n\r\nconst Resultado = ({ cotizacion }) => {\r\n\r\n    return (\r\n        (cotizacion === 0)\r\n            ? <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\r\n            : (\r\n                <ResultadoCotizacion>\r\n                    <TransitionGroup\r\n                        component=\"p\"\r\n                        className=\"resultado\"\r\n                    >\r\n                        <CSSTransition\r\n                        classNames=\"resultado\"\r\n                        key={cotizacion}\r\n                        timeout={{enter: 500, exit: 500}}\r\n                        >\r\n                            <TextoCotizacion>el total es: ${cotizacion}</TextoCotizacion>\r\n                        </CSSTransition>\r\n                    </TransitionGroup>\r\n                </ResultadoCotizacion>\r\n            )\r\n    );\r\n}\r\n\r\nexport default Resultado;","\r\nimport React from 'react';\r\nimport './Spiner.css'\r\n\r\nconst Spiner = () => {\r\n    return (\r\n        <div className=\"spinner\">\r\n            <div className=\"dot1\"></div>\r\n            <div className=\"dot2\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spiner;","import React, { useState } from 'react'\nimport Headear from './components/Headear'\nimport Formulario from './components/Formulario'\nimport Resumen from './components/Resumen'\nimport Resultado from './components/Resultado'\n\nimport styled from '@emotion/styled';\nimport Spiner from './components/Spiner'\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n    background-color: #FFF;\n    padding: 3rem;\n`;\n\nfunction App() {\n\n  const [resumen, guardarResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: '',\n      year: '',\n      plan: ''\n    }\n  });\n\n  const [cargando, guardarCargando] = useState(false);\n\n  const { cotizacion, datos } = resumen;\n\n  return (\n    <Contenedor>\n      <Headear\n        titulo='Cotizador De Seguros'\n      ></Headear>\n\n\n      <ContenedorFormulario>\n        <Formulario\n          guardarResumen={guardarResumen}\n          guardarCargando={guardarCargando}\n        />\n\n        {cargando ? <Spiner /> : null}\n\n        <Resumen\n          datos={datos}\n        >\n        </Resumen>\n        {\n          !cargando ? (\n            <Resultado\n              cotizacion={cotizacion}\n            ></Resultado>\n          ) : null\n        }\n\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}